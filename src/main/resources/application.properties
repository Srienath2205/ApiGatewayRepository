spring.application.name=api-gateway

server.port=5360
 
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true


# spring.cloud.gateway.routes[0].id=microService1
# spring.cloud.gateway.routes[0].uri=http://localhost:8070
# spring.cloud.gateway.routes[0].predicates[0]=Path=/mailServices/**

# Define the route for the User Service
# spring.cloud.gateway.routes[1].id=microService2
# spring.cloud.gateway.routes[1].uri=http://localhost:8091
# spring.cloud.gateway.routes[1].predicates[0]=Path=/users/**,/userssample/**



# Eureka Client Configuration
#spring.cloud.gateway.routes[0].id=microService1
#spring.cloud.gateway.routes[0].uri=lb://microService1
#spring.cloud.gateway.routes[0].predicates[0]=Path=/mailServices/**
#
#spring.cloud.gateway.routes[1].id=microService2
#spring.cloud.gateway.routes[1].uri=lb://microService2
#spring.cloud.gateway.routes[1].predicates[0]=Path=/users/**

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/


# Eureka Configuration (if using Eureka for service discovery)
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
#eureka.client.registerWithEureka=true
#eureka.client.fetchRegistry=true

# Spring Cloud Gateway Configuration
#spring.cloud.gateway.routes[0].id=microService1
#spring.cloud.gateway.routes[0].uri=http://localhost:8070
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/mailServices/**
# Route for User Service
#spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/v1/mailServices/(?<segment>.*), /mailServices/${segment}

#spring.cloud.gateway.routes[1].id=microService2
#spring.cloud.gateway.routes[1].uri=http://localhost:8091
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/users/**
# Route for Product Service
#spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/v1/users/(?<segment>.*), /users/${segment}
#
## Load Balancer Configuration (if using Spring Cloud LoadBalancer)
#spring.cloud.loadbalancer.ribbon.enabled=false
#spring.cloud.loadbalancer.client[microService1].servers[0]=https://microService1
#spring.cloud.loadbalancer.client[microService2].servers[0]=https://microService2
#
## Enable Circuit Breaker (if using Resilience4j)
#spring.cloud.circuitbreaker.enabled=true
#
## Timeouts
#spring.cloud.gateway.httpclient.connect-timeout=5000
#spring.cloud.gateway.httpclient.response-timeout=5000
#
## Logging Configuration
#logging.level.org.springframework.cloud.gateway=DEBUG
#logging.level.org.springframework.web=DEBUG  